<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS_Redis6安装</title>
      <link href="/2022/01/10/CentOS-Redis6%E5%AE%89%E8%A3%85/"/>
      <url>/2022/01/10/CentOS-Redis6%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="CentOS7安装Redis6全过程及出现的问题"><a href="#CentOS7安装Redis6全过程及出现的问题" class="headerlink" title="CentOS7安装Redis6全过程及出现的问题"></a>CentOS7安装Redis6全过程及出现的问题</h1><p>首先在 <code>/usr/local</code> 目录下创建 <code>redis</code> 目录：</p><p><code>[root@sher6j-01 ~]# makedir /usr/local/redis</code></p><p>然后通过ftp工具将下载好的Redis6压缩包上传至该目录，下载地址见<a href="https://redis.io/download">Redis官网</a>，将其解压到当前目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis]# tar -zxvf redis-6.0.9.tar.gz -C ./</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201108093433457.png#pic_center" alt="在这里插入图片描述"></p><p>然后就有了该 <code>redis-6.0.9</code> 目录，之后将压缩包删除即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis]# rm -rf redis-6.0.9.tar.gz </span><br></pre></td></tr></table></figure><p>然后进入 <code>redis-6.0.9</code> 目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis]# cd redis-6.0.9/</span><br></pre></td></tr></table></figure><p>下面按道理来说就是应该进行 <code>make</code> 编译了，官网中也是这么介绍的，所以键入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis-6.0.9]# make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>却发现产生了如下的<strong>各种错误</strong>：</p><p><img src="https://img-blog.csdnimg.cn/20201108093458524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>这是因为我们都知道Redis是用C语言写的，而我们崭新的CentOS7主机中还没有安装C语言，所以我们下一步安装 <code>gcc</code> 即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis-6.0.9]# yum install gcc </span><br></pre></td></tr></table></figure><p>再重新键入上面的 <code>make</code> 编译命令，但是又一次出现了如下错误！！！</p><p><img src="https://img-blog.csdnimg.cn/2020110809352160.png#pic_center" alt="在这里插入图片描述"></p><p>这次是因为CentOS7自动安装的 <code>gcc</code> 版本不够导致的，查看 <code>gcc</code> 版本用如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis-6.0.9]# gcc -version</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201108093539511.png#pic_center" alt="在这里插入图片描述"></p><p>可以看到系统默认安装的 <code>gcc</code> 版本是 <code>4.8.5</code>，这达不到安装Redis6需要的版本，Redis6要求 <code>gcc</code> 版本至少是 <code>5.3</code>，所以我们直接对 <code>gcc</code> 版本进行升级更新到 <code>9.3</code> 版本，分别键入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis-6.0.9]# yum -y install centos-release-scl</span><br><span class="line">[root@sher6j-01 redis-6.0.9]# yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br><span class="line">[root@sher6j-01 redis-6.0.9]# scl enable devtoolset-9 bash</span><br></pre></td></tr></table></figure><p>需要注意的是 <code>scl</code> 命令启用只是临时的，退出shell或重启就会恢复原系统 <code>gcc</code> 版本，如果要长期使用该高版本 <code>gcc</code> 的话，需要键入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis-6.0.9]# echo &quot;source /opt/rh/devtoolset-9/enable&quot; &gt;&gt;/etc/profile</span><br></pre></td></tr></table></figure><p>此时再查看 <code>gcc</code> 版本，已经成功升级</p><p><img src="https://img-blog.csdnimg.cn/20201108093556717.png#pic_center" alt="在这里插入图片描述"></p><p>然后。。。。。。然后就又出现了新问题。。。啊哈哈哈哈哈，山路崎岖过于坎坷：</p><p><img src="https://img-blog.csdnimg.cn/2020110809360962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>这里参考了<a href="https://blog.csdn.net/honchou56/article/details/53994708">大佬的文章</a>，原因大佬进行了介绍，这里只说明解决办法，在 <code>make</code> 的时候加入 <code>MALLOC</code> 命令，即键入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis-6.0.9]# make MALLOC=libc</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201108093625473.png#pic_center" alt="在这里插入图片描述"></p><p>终于！看到了我们熟悉的一些编译过程，好了，Redis6的安装过程就是这么的曲折，然后为了让我们的机器不用每次启动后都重新打开Redis，还是将其安装为系统服务并后台启动吧，进入Redis中的 <code>utils</code> 目录，执行该目录下自带的 <code>./install_server.sh</code> 脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 redis-6.0.9]# cd utils/</span><br><span class="line">[root@sher6j-01 utils]# ./install_server.sh</span><br></pre></td></tr></table></figure><p>然后。。。然后。。。又又又又出错了。。。</p><p><img src="https://img-blog.csdnimg.cn/20201108093638336.png#pic_center" alt="在这里插入图片描述"></p><p>这是该脚本中的小问题，我们对该脚本进行编辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 utils]# vim install_server.sh</span><br></pre></td></tr></table></figure><p>可以在该脚本中找到如下代码：</p><p><img src="https://img-blog.csdnimg.cn/20201108093649416.png#pic_center" alt="在这里插入图片描述"></p><p>这和我们看到的错误是一样的，<strong>注释掉吧</strong>，就变成了这个样子：</p><p><img src="https://img-blog.csdnimg.cn/20201108093700628.png#pic_center" alt="在这里插入图片描述"></p><p>然后 <code>wq</code> 保存即可。</p><p>再执行如下脚本，当然选项参数是可以更换的，这里我就都用的默认参数啦，毕竟是自己平时学习尝鲜用的</p><p><img src="https://img-blog.csdnimg.cn/20201108093714513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>看到了若干 <code>successfully</code> 真的是五味杂陈啊，当然现在我们查看Redis服务的状态发现其还未开启：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 utils]# systemctl status redis_6379.service</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201108093726746.png#pic_center" alt="在这里插入图片描述"></p><p>还需要开启该服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 utils]# systemctl start redis_6379.service</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201108093741918.png#pic_center" alt="在这里插入图片描述"></p><p>最后最后最后，还有一步可别忘了！！！Redis默认是只有本机可以进行连接的，无法远程连接，这里只需要修改下Redis配置文件就好了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 utils]# vim /etc/redis/6379.conf</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201108093753703.png#pic_center" alt="在这里插入图片描述"></p><p>找到该行，将 <code>127.0.0.1</code> 修改为 <code>0.0.0.0</code> 即可。</p><p>然后重启Redis服务就可以啦：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 utils]# systemctl restart redis_6379.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS_ElasticSearch安装</title>
      <link href="/2022/01/06/CentOS-ElasticSearch%E5%AE%89%E8%A3%85/"/>
      <url>/2022/01/06/CentOS-ElasticSearch%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="安装-elasticsearch"><a href="#安装-elasticsearch" class="headerlink" title="安装 elasticsearch"></a>安装 <code>elasticsearch</code></h2><h3 id="创建用于启动-elasticsearch-服务的用户"><a href="#创建用于启动-elasticsearch-服务的用户" class="headerlink" title="创建用于启动 elasticsearch 服务的用户"></a>创建用于启动 <code>elasticsearch</code> 服务的用户</h3><p>ES不能以root用户身份启动，所以必须创建普通用户:</p><ul><li><p>创建一个新的<code>es</code>用户组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 ~]# groupadd es</span><br></pre></td></tr></table></figure></li><li><p>创建新的用户<code>es6j</code>并将其放入<code>es</code>用户组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 ~]# useradd es6j -g es</span><br></pre></td></tr></table></figure></li><li><p>修改<code>es6j</code>用户的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 ~]# passwd es6j</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img-blog.csdnimg.cn/20201110131912168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><blockquote><p>之所以上面提示无效的密码，是因为我将密码设置为了 <code>1234</code>，过于简单，该提示可以忽略，只要重新输入密码即可设置密码成功</p></blockquote><h3 id="用普通用户安装-elasticsearch-服务；"><a href="#用普通用户安装-elasticsearch-服务；" class="headerlink" title="用普通用户安装 elasticsearch 服务；"></a>用普通用户安装 <code>elasticsearch</code> 服务；</h3><p>利用ftp工具将安装包上传至<code>es6j</code>的<code>home</code>目录下</p><p><img src="https://img-blog.csdnimg.cn/20201110131931949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>然后对其进行解压：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[es6j@sher6j-01 ~]$ tar -zxvf elasticsearch-6.8.0.tar.gz</span><br></pre></td></tr></table></figure><p>解压后其实就安装成功了，我们进入<code>elasticsearch</code>的目录进行查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[es6j@sher6j-01 ~]$ cd elasticsearch-6.8.0/</span><br></pre></td></tr></table></figure><p>其主要目录说明如下：</p><p><img src="https://img-blog.csdnimg.cn/20201110131951786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>如果要启动<code>elasticsearch</code>服务，则进入<code>bin</code>目录下执行启动脚本即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[es6j@sher6j-01 elasticsearch-6.8.0]$ cd bin</span><br><span class="line">[es6j@sher6j-01 bin]$ ./elasticsearch</span><br></pre></td></tr></table></figure><p>当出现started时代表启动成功</p><p><img src="https://img-blog.csdnimg.cn/20201110132011775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>可以看到<code>elasticsearch</code>对外提供了两个端口<code>9200</code>和<code>9300</code>，其中<code>9200</code>作为Web端口可以用作浏览器访问，而<code>9300</code>作为TCP端口可以供如Java程序等进行连接。</p><blockquote><p>如果要关闭其服务，用 <code>Ctrl</code> + <code>C</code> 即可。</p></blockquote><p>我们可以以该主机中的任一用户使用 <code>curl</code> 命令模拟浏览器访问 <code>elasticsearch</code> 的服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher6j-01 ~]# curl http://localhost:9200</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201110132030193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>如上图可以看见 <code>elasticsearch</code> 响应的 <code>JSON</code> 串，而之所以用 <code>curl</code> 模拟而没有用外部浏览器直接访问，是因为 <code>elasticsearch</code> 默认只能够本机访问。</p><h3 id="开启远程连接权限"><a href="#开启远程连接权限" class="headerlink" title="开启远程连接权限"></a>开启远程连接权限</h3><p>进入到 <code>config</code> 目录下，编辑其主配置文件 <code>eelasticsearch.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[es6j@sher6j-01 elasticsearch-6.8.0]$ cd config/</span><br><span class="line">[es6j@sher6j-01 config]$ vim elasticsearch.yml</span><br></pre></td></tr></table></figure><p>在 <code>vim</code> 界面中搜索 <code>network.host</code> 配置项（<code>/</code>搜索）</p><p><img src="https://img-blog.csdnimg.cn/20201110132050848.png#pic_center" alt="在这里插入图片描述"></p><p>原配置文件如下：</p><p><img src="https://img-blog.csdnimg.cn/20201110132107351.png#pic_center" alt="在这里插入图片描述"></p><p>将其修改为：<code>network.host: 0.0.0.0</code>。然后重新启动 <code>elasticsearch</code> 服务。</p><p>然后我们发现就出现了如下的错误：</p><p><img src="https://img-blog.csdnimg.cn/20201110132124988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>当然还有可能是如下的三个错误，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ERROR: [3] bootstrap checks failed</span><br><span class="line">[1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65535]</span><br><span class="line">[2]: max number of threads [3802] for user [es6j] is too low, increase to at least [4096]</span><br><span class="line">[3]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br></pre></td></tr></table></figure><p>这是因为一旦 <code>elasticsearch</code> 启动了远程连接，其认为是生产模式，所以就需要对内存、线程数等有所要求，所以我们需要将主机调整到符合要求的状态。</p><p>修改主机的状态需要用 <code>root</code> 用户：</p><ul><li>&#96;&#96;&#96;shell<br>[root@sher6j-01 ~]# vim &#x2F;etc&#x2F;security&#x2F;limits.conf<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在文件末尾插入如下参数后保存退出：</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><pre><code>          soft    nofile          65536</code></pre></li><li><pre><code>          hard    nofile          65536</code></pre></li><li><pre><code>          soft    nproc           4096</code></pre></li><li><pre><code>          hard    nproc           4096</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110132147171.png#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 重新登录后，即可发现配置已经生效：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-01 ~]# ulimit -Hn<br>[root@sher6j-01 ~]# ulimit -Sn<br>[root@sher6j-01 ~]# ulimit -Hu<br>[root@sher6j-01 ~]# ulimit -Su<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110132202297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* ```</span><br><span class="line">  [root@sher6j-01 ~]# vim /etc/security/limits.d/20-nproc.conf</span><br></pre></td></tr></table></figure>修改该配置文件，将其 <code>*</code> 修改为启动 <code>elasticsearch</code> 服务的用户名，此处即为 <code>es6j</code>。</li></ul><p><img src="https://img-blog.csdnimg.cn/20201110132219246.png#pic_center" alt="在这里插入图片描述"></p><p>  修改后：</p><p><img src="https://img-blog.csdnimg.cn/20201110132236713.png#pic_center" alt="在这里插入图片描述"></p><ul><li><pre><code>[root@sher6j-01 ~]# vim /etc/sysctl.conf<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  修改最大线程数，在该配置文件中加入 `vm.max_map_count=655360` 参数</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110132253359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  然后可以执行如下命令对该参数进行检测：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-01 ~]# sysctl -p<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110132310174.png#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">经过以上配置的修改后，我们重新登录 `es6j` 用户，再次启动 `elasticsearch` 服务，发现可以启动成功了</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110132327759.png#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">再次用外部浏览器访问 `http://192.168.56.102:9200/` ，即可访问成功：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110132343232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; 需要主机关闭防火墙：</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>&gt; [root@sher6j-01 ~]# systemctl stop firewalld&gt; <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 安装 `Kibana`</span><br><span class="line"></span><br><span class="line">由于 `elasticsearch` 只对外暴露了端口，而没有操作界面，所以我们需要安装一个图形化界面来操作 `elasticsearch`，这就是官方提供的 `Kibana`，当然了，`Kibana` 的用途还有很多很多，作为图形化界面操作 `elasticsearch` 只是其很小的一部分。</span><br><span class="line"></span><br><span class="line">安装 `kibana` 我们以 `root` 身份安装即可，在 `\usr\local\` 目录下创建 `kibana`目录：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-01 local]# mkdir kibana<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后用ftp工具将 `kibana` 安装包上传至该目录：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/2020111016191263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后进行解压，解压后进入其目录：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-01 kibana]# tar -zxvf kibana-6.8.0-linux-x86_64.tar.gz[root@sher6j-01 kibana]# cd kibana-6.8.0-linux-x86_64/<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">比较重要的目录就是 `bin` 和 `config`</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110161935382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我们进入到 `config` 目录下修改其配置文件：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-01 config]# vim kibana.yml<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">修改如下两处配置改成 `kibana` 要监听的 `elasticsearch` 服务的主机地址，当然本机也可以直接用原来的 `localhost`：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110161953255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后进入 `bin` 目录运行启动脚本即可：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-01 bin]# ./kibana<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110162010750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后在浏览器中访问该地址即可：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/202011101620281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line">## 安装中文分词器插件</span><br><span class="line"></span><br><span class="line">`elasticsearch` 默认的分词器为标准分词器(Standard Analyzer)，标准分词器对于英文为**单词分词**，对于中文为**单字分词**。也就是说，如果关键字为“中华人民共和国”，则标准分词器会分为&quot;中&quot;、 &quot;华&quot;、 &quot;人&quot;、 &quot;民&quot;、 &quot;共&quot;、 &quot;和&quot;、 &quot;国&quot;。这无疑对中文的搜索非常不适合，所以我们需要安装 `ik` 分词器的插件， `ik` 分词器的相关文档可以参考[ik分词器GitHub官网](https://github.com/medcl/elasticsearch-analysis-ik)，安装方式也可以使用本地安装或在线安装，这里使用在线安装。</span><br><span class="line"></span><br><span class="line">* 由于之前的索引库数据是由标准分词器产生的，这会使 `ik` 分词器安装错误，所以需要清空之前的索引库数据，即 `elasticsearch` 安装目录下的 `data` 文件夹：![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110204145227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>[es6j@sher6j-01 elasticsearch-6.8.0]$ rm -rf data/<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 在 `bin` 目录下之前提到过有各种脚本，其中就有用于在线安装插件的脚本，利用该脚本即可在线安装插件，其用法为：</span><br><span class="line"></span><br></pre></td></tr></table></figure>elasticsearch-plugin install 插件地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110204207238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  所以在 `bin` 目录下键入如下命令即可，注意该 `ik` 分词器的版本必须和 `elasticsearch` 的版本一致！</span><br><span class="line"></span><br></pre></td></tr></table></figure>[es6j@sher6j-01 bin]$ ./elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.8.0/elasticsearch-analysis-ik-6.8.0.zip<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  当出现 `installed` 即为安装好该插件：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110204228176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 然后就可以重启 `elasticsearch` 和 `kibana` 来测试该分词器是否生效，可以看到在 `elasticsearch` 启动过程中加载了 `ik` 分词器的插件：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110204246667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  在 `kibana` 中键入如下命令测试分词器：</span><br><span class="line"></span><br></pre></td></tr></table></figure>GET /_analyze&#123;  &quot;text&quot;: &quot;中华人民共和国国歌&quot;,  &quot;analyzer&quot;: &quot;ik_smart&quot;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  可以看到成功对中文进行了分词：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201110204305454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; `ik_smart` 和 `ik_max_word` 的区别，在 `ik` 分词器的官方文档中有所说明：</span><br><span class="line">&gt;</span><br><span class="line">&gt; * `ik_max_word`: 会将文本做最细粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国,中华人民,中华,华人,人民共和国,人民,人,民,共和国,共和,和,国国,国歌”，会穷尽各种可能的组合，适合 Term Query；</span><br><span class="line">&gt; * `ik_smart`: 会做最粗粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国,国歌”，适合 Phrase 查询。</span><br><span class="line"></span><br><span class="line">## 搭建ElasticSearch集群环境</span><br><span class="line"></span><br><span class="line">### 安装3个节点的ElasticSearch</span><br><span class="line"></span><br><span class="line">这里就不在不同的机器上测试了，毕竟原理方式都是一样，我们先在原安装目录下建立 `escluster` 文件夹，然后将安装好的 `elasticsearch` 分别拷贝到 `escluster/node1` 、`escluster/node2`、 `escluster/node3`，以用作三个集群中不同的节点。</span><br><span class="line"></span><br></pre></td></tr></table></figure>[es6j@sher6j-03 ~]$ mkdir escluster[es6j@sher6j-03 ~]$ cp -r elasticsearch-6.8.0/ escluster/node1/[es6j@sher6j-03 ~]$ cp -r elasticsearch-6.8.0/ escluster/node2/[es6j@sher6j-03 ~]$ cp -r elasticsearch-6.8.0/ escluster/node3/<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162139297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">由于都是新的节点，然后我们将复制的原 `es` 中的数据清空：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[es6j@sher6j-03 node1]$ rm -rf data[es6j@sher6j-03 node2]$ rm -rf data[es6j@sher6j-03 node3]$ rm -rf data<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 分配Java虚拟机堆内存</span><br><span class="line"></span><br><span class="line">由于 `es` 要运行在Java虚拟机上，而此时是在一台机器上模拟的集群搭建，我给`Linux`主机分配的内存为2G，所以为了不让三个 `es` 节点同时运行导致程序崩溃，将每个节点的虚拟机内存调节至 `256M`，编辑每个节点的 `config` 目录下的 `jvm.options` 配置Java虚拟机参数，添加 `-Xms256m -Xmx256m` 配置表示Java虚拟机堆分配的最小内存为 `256M`，最大内存为 `256M`，即分配固定内存为 `256M`：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162153744.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>[es6j@sher6j-03 node1]$ vim config/jvm.options[es6j@sher6j-03 node2]$ vim config/jvm.options[es6j@sher6j-03 node3]$ vim config/jvm.options<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162208802.png#pic_center)</span><br><span class="line"></span><br><span class="line">### 修改配置文件</span><br><span class="line"></span><br><span class="line">分别修改其 `config` 目录下的 `elasticsearch.yml` 文件进行不同节点的配置：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[es6j@sher6j-03 node1]$ vim config/elasticsearch.yml[es6j@sher6j-03 node2]$ vim config/elasticsearch.yml[es6j@sher6j-03 node3]$ vim config/elasticsearch.yml<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">分别进行如下配置：</span><br><span class="line"></span><br><span class="line">* node1:</span><br><span class="line"></span><br></pre></td></tr></table></figure>cluster.name: sher6j-essnode.name: es-01network.host: 0.0.0.0http.port: 9201discovery.zen.ping.unicast.hosts: [&quot;192.168.56.103:9302&quot;, &quot;192.168.56.103:9303&quot;]gateway.recover_after_nodes: 3transport.tcp.port: 9301<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* node2:</span><br><span class="line"></span><br></pre></td></tr></table></figure>cluster.name: sher6j-essnode.name: es-02network.host: 0.0.0.0http.port: 9202discovery.zen.ping.unicast.hosts: [&quot;192.168.56.103:9301&quot;, &quot;192.168.56.103:9303&quot;]gateway.recover_after_nodes: 3transport.tcp.port: 9302<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* node3:</span><br><span class="line"></span><br></pre></td></tr></table></figure>cluster.name: sher6j-essnode.name: es-03network.host: 0.0.0.0http.port: 9203discovery.zen.ping.unicast.hosts: [&quot;192.168.56.103:9301&quot;, &quot;192.168.56.103:9302&quot;]gateway.recover_after_nodes: 3transport.tcp.port: 9303<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">其配置文件的含义如下：</span><br><span class="line"></span><br><span class="line">| 配置项                             | 含义                                                |</span><br><span class="line">| ---------------------------------- | --------------------------------------------------- |</span><br><span class="line">| `cluster.name`                     | 集群的名称，作为一个集群名称必须一致                |</span><br><span class="line">| `node.name`                        | 节点的名称，作为一个集群中的节点其名称不能一致      |</span><br><span class="line">| `network.host: 0.0.0.0`            | 允许监听的地址(`0.0.0.0`表示开启远程权限)           |</span><br><span class="line">| `http.port`                        | `es` 服务的监听端口                                 |</span><br><span class="line">| `discovery.zen.ping.unicast.hosts` | 集群中其他的节点，注意需要填写的端口是TCP端口！！！ |</span><br><span class="line">| `gateway.recover_after_nodes`      | 集群可做主节点的最小节点数                          |</span><br><span class="line">| `transport.tcp.port`               | 用于TCP连接的TCP端口                                |</span><br><span class="line"></span><br><span class="line">&gt; 注意不同节点间的心跳链接是通过 TCP端口，故 `discovery.zen.ping.unicast.hosts` 中**一定要写 TCP端口**，如果写成了 HTTP端口，则节点间无法互相发现</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162224558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后分别将节点启动即可：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[es6j@sher6j-03 node1]$ bin/elasticsearch[es6j@sher6j-03 node2]$ bin/elasticsearch[es6j@sher6j-03 node3]$ bin/elasticsearch<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以在节点1的日志中看到节点2和3分别加入了集群：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162236915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后我们可以利用 `_cat` API访问任意节点查看集群的状态，输入任意节点网址即可 http://192.168.56.103:9201/_cat/health?v （`v`参数代表显示表头），可以看到集群的状态是健壮的 `green`：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162248919.png#pic_center)</span><br><span class="line"></span><br><span class="line">## 安装 `elasticsearch-head` 插件，可视化集群状态</span><br><span class="line"></span><br><span class="line">默认的 `_cat` API只提供了查看集群的状态，而对于**分片**及其**副本分片**如何分布在不同集群中并无法知道细节，所以就有大佬开发了一个插件用于可视化集群状态，虽然曾经是插件，也就是说曾经是可以将 `elasticsearch-head` 直接安装到 `es` 中的 `plugins` 目录下的，但是在[elasticsearch-head的官方文档中提到](https://github.com/mobz/elasticsearch-head) ：</span><br><span class="line"></span><br></pre></td></tr></table></figure>for Elasticsearch 5.x, 6.x, and 7.x: site plugins are not supported. Run as a standalone server<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">也就是说在 `ElasticSearch` 的5版本以上就不支持该插件了，但还 `elasticsearch-head` 可以作为单独的服务运行，其运行的默认HTTP端口为 `9100`。</span><br><span class="line"></span><br><span class="line">### NodeJS支持</span><br><span class="line"></span><br><span class="line">该插件的使用需要有 `NodeJS` 的支持，所以在我们的及其上先以 `root` 用户安装 `NodeJS`，将安装包上传至 `/usr/local/nodejs` 目录：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-03 local]# mkdir nodejs<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162303871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意 `nodejs` 的压缩包为 `tar.xz` 格式，所以需用如下命令解压：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-03 nodejs]# tar -xJvf node-v12.16.3-linux-x64.tar.xz -C ./<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后编辑系统变量：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-03 nodejs]# vim  ~/.bash_profile<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">追加如下环境变量：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162319236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line">然后使环境变量生效：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-03 nodejs]# source  ~/.bash_profile<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">输入 `node -v` 显示版本即可：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/2020111316233172.png#pic_center)</span><br><span class="line"></span><br><span class="line">### 安装 es-head</span><br><span class="line"></span><br><span class="line">将 `elasticsearch-head` 的压缩包放入 `/usr/local/eshead` 中：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/20201113162342114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后解压：</span><br><span class="line"></span><br></pre></td></tr></table></figure>[root@sher6j-03 eshead]# unzip elasticsearch-head-master.zip<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后进入其目录并安装所需依赖，然后启动：</span><br><span class="line"></span><br></pre></td></tr></table></figure># 设置淘宝镜像加速国内下载[root@sher6j-03 elasticsearch-head-master]# npm config set registry https://registry.npm.taobao.org[root@sher6j-03 elasticsearch-head-master]# npm install[root@sher6j-03 elasticsearch-head-master]# npm run start<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后我们访问 http://192.168.56.103:9100/ 即可：</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/2020111316235585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">但是我们却怎么都连接不上！</span><br><span class="line"></span><br><span class="line">### 开启 `elasticsearch` 的跨域访问</span><br><span class="line"></span><br><span class="line">之所以会有上面的问题，是因为 `es-head` 并不是 `es` 的官方插件，也就是说可以理解为两个公司的产品，这就存在我们熟知的**跨域请求**，所以我们要开启 `elasticsearch` 的跨域访问，编辑其 `elasticsearch.yml` 文件，在其中加入如下两行配置： </span><br><span class="line"></span><br></pre></td></tr></table></figure>http.cors.enabled: truehttp.cors.allow-origin: &quot;*&quot;</code></pre></li></ul><p>然后重启 <code>es</code> 服务后，就可以用 <code>es-head</code> 连接了~：</p><p><img src="https://img-blog.csdnimg.cn/20201113162406721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdWppYTIxMTU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>然后我们就可以通过该插件可视化观察集群的分片情况了~</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS_Kafka安装</title>
      <link href="/2022/01/03/CentOS-Kafka%E5%AE%89%E8%A3%85/"/>
      <url>/2022/01/03/CentOS-Kafka%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><ol><li>单台在&#x2F;usr&#x2F;local下创建kafka文件夹并将安装包放入并解压，然后可以进行重命名</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir kafka</span><br></pre></td></tr></table></figure><ol><li>在kafka目录下创建data文件夹，用于存放kafka日志等</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure><ol><li>修改kafka配置conf&#x2F;servers.properties，需要修改三处地方</li></ol><ul><li><strong>broker标识</strong></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1650108385984-d1998db6-9e7e-4c28-9099-1592538a9abb.png" alt="img"></p><ul><li><strong>日志目录</strong></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1650108538144-e4ea00b2-ef76-469e-9510-01ef657d05a6.png" alt="img"></p><ul><li><strong>连接的zk节点</strong></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1650108683328-cd55ff65-7462-44a3-9dda-8eabed97761d.png" alt="img"></p><ol><li>将kafka分发到集群中</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1650108843050-6aaa635f-3886-4cd7-8fba-e12b6065d4c2.png" alt="img"></p><ol><li>修改集群中其他机器的broker.id</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1650108906352-b7a2f14e-2e67-48b5-aae1-670244862c97.png" alt="img"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1650108950970-62873944-5d6b-49f5-8241-80ba88b02b1d.png" alt="img"></p><ol><li>修改环境变量</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export KAFKA_HOME=/usr/local/kafka/kafka-3.0.0</span><br><span class="line">export PATH=$PATH:$KAFKA_HOME/bin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1650109170587-f8b464aa-0a68-486c-bd44-f9e0fcdff3e6.png" alt="img"></p><ol><li>启动kafka命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@sher1j kafka-3.0.0]<span class="comment"># bin/kafka-server-start.sh -daemon config/server.properties</span></span><br></pre></td></tr></table></figure><ol><li>kafka集群启动脚本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)&#123;</span><br><span class="line">  for i in sher1j sher2j sher3j</span><br><span class="line">  do</span><br><span class="line">    echo ==========kafka@$i 启动==========</span><br><span class="line">    ssh $i &quot;source /etc/profile;/usr/local/kafka/kafka-3.0.0/bin/kafka-server-start.sh -daemon /usr/local/kafka/kafka-3.0.0/config/server.properties&quot; </span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)&#123;</span><br><span class="line">  for i in sher1j sher2j sher3j</span><br><span class="line">  do</span><br><span class="line">    echo ==========kafka@$i 停止==========</span><br><span class="line">    ssh $i &quot;/usr/local/kafka/kafka-3.0.0/bin/kafka-server-stop.sh&quot;</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS_Zookeeper安装</title>
      <link href="/2022/01/02/CentOS-Zookeeper%E5%AE%89%E8%A3%85/"/>
      <url>/2022/01/02/CentOS-Zookeeper%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="1-单台安装"><a href="#1-单台安装" class="headerlink" title="1. 单台安装"></a>1. 单台安装</h1><ol><li><strong>在&#x2F;usr&#x2F;local&#x2F; 下创建zookeeper ⽂件夹并进⼊</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/</span><br><span class="line"><span class="built_in">mkdir</span> zookeeper</span><br><span class="line"><span class="built_in">cd</span> zookeeper</span><br></pre></td></tr></table></figure><ol><li><strong>将ZooKeeper 安装包解压到&#x2F;usr&#x2F;local&#x2F;zookeeper 中即可</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz</span><br></pre></td></tr></table></figure><ol><li><strong>文件名太长，可以重命名下</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648649513136-2d19eaf6-f856-4679-af60-d844160c09c7.png" alt="img"></p><ol><li><strong>创建data目录</strong></li></ol><p>zookeeper中默认没有data目录，且配置样例里data存储在&#x2F;tmp临时文件中，在zookeeper安装目录下创建data目录用于存放数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/zookeeper/zookeeper-3.5.7</span><br><span class="line"><span class="built_in">mkdir</span> data</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648650201703-4810249f-fc82-47d1-a36c-ad18257647c1.png" alt="img"></p><ol><li><strong>创建配置文件并修改</strong></li></ol><p>进⼊到zookeeper 的conf ⽬录，复制「zoo_sample.cfg」 得到「zoo.cfg」 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> conf/</span><br><span class="line"><span class="built_in">cp</span> zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><p>修改配置⽂件zoo.cfg ，将其中的dataDir 修改为上⾯刚创建的data ⽬录，其他选项可以按需配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> vim zoo.cfg</span><br><span class="line">dataDir=/usr/local/zookeeper/zookeeper-3.5.7/data</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648650411230-e10ca5a2-4b1b-458f-9613-b9b146ba338c.png" alt="img"></p><ol><li><strong>配置环境变量</strong></li></ol><p>编辑环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>尾部加入zookeeper的bin路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ZOOKEEPER_HOME=/usr/local/zookeeper/zookeeper-3.5.7</span><br><span class="line">export PATH=$PATH:$ZOOKEEPER_HOME/bin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648650691443-212f5d52-fa6a-440d-86e4-c3cb64f7d82f.png" alt="img"></p><p>环境变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><ol><li><strong>设置开机自启（选做）</strong></li></ol><p>⾸先进⼊&#x2F;etc&#x2F;rc.d&#x2F;init.d ⽬录，创建⼀个名为zookeeper 的⽂件，并赋予执⾏权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/rc.d/init.d/</span><br><span class="line"><span class="built_in">touch</span> zookeeper</span><br><span class="line"><span class="built_in">chmod</span> +x zookeeper</span><br></pre></td></tr></table></figure><p>接下来编辑zookeeper ⽂件，并在其中加⼊如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#chkconfig:- 20 90</span><br><span class="line">#description:zookeeper</span><br><span class="line">#processname:zookeeper</span><br><span class="line">ZOOKEEPER_HOME=/usr/local/zookeeper/zookeeper-3.5.7</span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_161 # 此处根据你的实际情况更换对应</span><br><span class="line">case $1 in</span><br><span class="line">start) su root $ZOOKEEPER_HOME/bin/zkServer.sh start;;</span><br><span class="line">stop) su root $ZOOKEEPER_HOME/bin/zkServer.sh stop;;</span><br><span class="line">status) su root $ZOOKEEPER_HOME/bin/zkServer.sh status;;</span><br><span class="line">restart) su root $ZOOKEEPER_HOME/bin/zkServer.sh restart;;</span><br><span class="line">*) echo &quot;require start|stop|status|restart&quot; ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>最后加入开机启动即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add zookeeper</span><br><span class="line">chkconfig zookeeper on</span><br></pre></td></tr></table></figure><h1 id="2-启动等命令"><a href="#2-启动等命令" class="headerlink" title="2. 启动等命令"></a>2. 启动等命令</h1><ul><li>启动zookeeper：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648651016998-10d9990d-7c2a-49ae-8543-d990e8f841d0.png" alt="img"></p><p>查看java进程则出现zookeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jsp</span><br><span class="line">jsp -l <span class="comment"># l表示查看全类名</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648651083153-77441f11-b7a8-4d36-9847-ea46abb7e14e.png" alt="img"></p><ul><li>检查启动状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh status</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648651148524-903a504d-f4f4-4203-b9cc-e513d888c53c.png" alt="img"></p><p>看出zookeeper默认会绑定端⼝2181 。</p><ul><li>链接zookeeper</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkCli.sh</span><br></pre></td></tr></table></figure><ul><li>停止</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh stop</span><br></pre></td></tr></table></figure><h1 id="3-集群搭建"><a href="#3-集群搭建" class="headerlink" title="3. 集群搭建"></a>3. 集群搭建</h1><p>比如三台机器的集群</p><ol><li><strong>配置身份标识</strong></li></ol><p>进入zookeeper数据文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/zookeeper/zookeeper-3.5.7/data</span><br></pre></td></tr></table></figure><p>在data目录下创建一个myid的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim myid</span><br></pre></td></tr></table></figure><p>在文件中添加与server对应的编号（注意：上下不要有空行，左右不要有空格）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>然后将其他机器上进行同样操作。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648652621648-f418997a-0548-469d-aeaa-5a5b08c9c2c8.png" alt="img"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648652696886-4fef20fc-b205-4fb5-887a-fa10af560490.png" alt="img"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648652783177-9cd5c1bc-1333-46c8-91cb-b4b0d264ffd2.png" alt="img"></p><ol><li><strong>配置zoo.cfg文件</strong></li></ol><p>进入到zookeeper配目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/zookeeper/zookeeper-3.5.7/conf</span><br></pre></td></tr></table></figure><p>修改配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim zoo.cfg</span><br></pre></td></tr></table></figure><p>在配置文件末尾配置集群配置信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#############cluster#############</span><br><span class="line">server.1=192.168.10.101:2888:3888</span><br><span class="line">server.2=192.168.10.102:2888:3888</span><br><span class="line">server.3=192.168.10.103:2888:3888</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648653151319-c8153404-f96b-4fa6-b8b7-8a7857949945.png" alt="img"></p><p>并在集群中的每一台机器增加该配置</p><p>配置参数解读：</p><p>server.A&#x3D;B:C:D</p><ul><li><strong>A</strong>是一个数字，表示这个是第几号服务器；集群模式下配置一个文件myid，这个文件在data目录下，这个文件里面有一个数据就是A的值，Zookeeper启动时读取此文件，拿到里面的数据与zoo.cfg里面的配置信息比较从而判断到底是哪个server。</li><li><strong>B</strong>是这个服务器的地址；</li><li><strong>C</strong>是这个服务器Follower与集群中的Leader服务器交换信息的端口；</li><li><strong>D</strong>是万一集群中的Leader服务器挂了，需要一个端口来重新进行选举，选出一个新的Leader，而这个端口就是用来执行选举时服务器相互通信的端口。</li></ul><ol><li><strong>启动服务器</strong></li></ol><p>集群启动zookeeper服务：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648655021529-0cdd7ff7-9011-427e-939d-8665d95b5e2b.png" alt="img"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648655055745-4436b0ae-bbe9-47ba-80a6-2f96ecf846a8.png" alt="img"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648655080060-5aaf064b-f916-471e-b40e-e88cc11675e2.png" alt="img"></p><p>当集群中有半数以上时才能运行成功，否则集群就会not running。</p><h1 id="4-对于不同机器间的通讯"><a href="#4-对于不同机器间的通讯" class="headerlink" title="4. 对于不同机器间的通讯"></a>4. 对于不同机器间的通讯</h1><ul><li>方式一：关闭防火墙：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><ul><li>方式二：开放端口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld.service <span class="comment"># 打开防火墙</span></span><br><span class="line">firewall-cmd --zone=public --add-port=2888/tcp --permanent <span class="comment"># 开放端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=2888/tcp --permanent <span class="comment"># 开放端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=3888/tcp --permanent </span><br><span class="line">firewall-cmd --reload <span class="comment"># 重启防火墙</span></span><br></pre></td></tr></table></figure><p>done.</p><h1 id="注1-远程登录时zk找不到JAVA-HOME"><a href="#注1-远程登录时zk找不到JAVA-HOME" class="headerlink" title="注1 远程登录时zk找不到JAVA_HOME"></a>注1 远程登录时zk找不到JAVA_HOME</h1><p>在zk的bin目录里修改「zkEnv.sh」内容，在如下位置加入JAVA_HOME</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648799211742-e899f84b-ce66-4a16-a4b8-f06a77438a5c.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> zk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS_MySQL安装</title>
      <link href="/2022/01/02/CentOS-MySQL%E5%AE%89%E8%A3%85/"/>
      <url>/2022/01/02/CentOS-MySQL%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="1-安装前说明"><a href="#1-安装前说明" class="headerlink" title="1. 安装前说明"></a>1. 安装前说明</h1><h2 id="1-1-Linux系统及工具的准备"><a href="#1-1-Linux系统及工具的准备" class="headerlink" title="1.1 Linux系统及工具的准备"></a>1.1 Linux系统及工具的准备</h2><ul><li><p>安装并启动好两台虚拟机： CentOS 7</p></li><li><ul><li>掌握克隆虚拟机的操作</li></ul></li><li><ul><li><ul><li>mac地址</li><li>主机名</li></ul></li></ul></li><li><ul><li><ul><li>ip地址</li><li>UUID</li></ul></li></ul></li><li><p>安装有Xshell 和Xftp 等访问CentOS系统的工具</p></li><li><p>CentOS6和CentOS7在MySQL的使用中的区别</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 防火墙：6是iptables，7是firewalld</span><br><span class="line">2. 启动服务的命令：6是service，7是systemctl</span><br></pre></td></tr></table></figure><h2 id="1-2-查看是否安装过MySQL"><a href="#1-2-查看是否安装过MySQL" class="headerlink" title="1.2 查看是否安装过MySQL"></a>1.2 查看是否安装过MySQL</h2><ul><li>如果你是用rpm安装, 检查一下RPM PACKAGE：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep -i mysql <span class="comment"># -i 忽略大小写</span></span><br></pre></td></tr></table></figure><ul><li>检查mysql service：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure><ul><li>如果存在mysql-libs的旧版本包，显示如下：</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566266567-55ead30d-389f-4fb9-aa6e-1ad031db3f45.png" alt="img"></p><ul><li>如果不存在mysql-lib的版本，显示如下：</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566283830-67b6dc80-e9df-4ce1-bb77-41a1be833753.png" alt="img"></p><h2 id="1-3-MySQL的卸载"><a href="#1-3-MySQL的卸载" class="headerlink" title="1.3 MySQL的卸载"></a>1.3 MySQL的卸载</h2><p><strong>1. 关闭 mysql 服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mysqld.service</span><br></pre></td></tr></table></figure><p><strong>2. 查看当前 mysql 安装状况</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep -i mysql</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">yum list installed | grep mysql</span><br></pre></td></tr></table></figure><p><strong>3. 卸载上述命令查询出的已安装程序</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove mysql-xxx mysql-xxx mysql-xxx mysqk-xxxx</span><br></pre></td></tr></table></figure><p>务必卸载干净，反复执行「rpm -qa | grep -i mysql 」确认是否有卸载残留</p><p><strong>4. 删除 mysql 相关文件</strong></p><ul><li>查找相关文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name mysql</span><br></pre></td></tr></table></figure><ul><li>删除上述命令查找出的相关文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf xxx</span><br></pre></td></tr></table></figure><p><strong>5.删除 my.cnf</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /etc/my.cnf</span><br></pre></td></tr></table></figure><h1 id="2-MySQL的Linux版安装"><a href="#2-MySQL的Linux版安装" class="headerlink" title="2. MySQL的Linux版安装"></a>2. MySQL的Linux版安装</h1><h2 id="2-1-下载MySQL指定版本"><a href="#2-1-下载MySQL指定版本" class="headerlink" title="2.1 下载MySQL指定版本"></a>2.1 下载MySQL指定版本</h2><p><strong>1. 下载地址</strong></p><p>官网： <a href="https://www.mysql.com/">https://www.mysql.com</a></p><p><strong>2. 打开官网，点击DOWNLOADS</strong></p><p>然后，点击「MySQL Community(GPL) Downloads」</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566553702-df51078c-ecc1-4593-a3d4-e751778e78d6.png" alt="img"></p><p><strong>3. 点击 MySQL Community Server</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566570551-c14e2f28-433e-4e5a-8e05-30ced97c58fb.png" alt="img"></p><p><strong>4. 在General Availability(GA) Releases中选择适合的版本</strong></p><ul><li>如果安装Windows 系统下MySQL ，推荐下载MSI安装程序；点击Go to Download Page 进行下载即可</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566611339-7ad66451-2a65-437e-8794-97e36e5ce5b6.png" alt="img"></p><p><strong>5. Linux系统下安装MySQL的几种方式</strong></p><p><strong>5.1 Linux系统下安装软件的常用三种方式：</strong></p><p><strong>方式1：rpm命令</strong></p><p>使用rpm命令安装扩展名为”.rpm”的软件包。</p><p>.rpm包的一般格式：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566686969-349a4e25-a931-4b81-a361-e3f5a2846865.png" alt="img"></p><p><strong>方式2：yum命令</strong></p><p>需联网，从互联网获取的yum源，直接使用yum命令安装。</p><p><strong>方式3：编译安装源码包</strong></p><p>针对tar.gz 这样的压缩格式，要用tar命令来解压；如果是其它压缩格式，就使用其它命令。</p><p><strong>5.2 Linux系统下安装MySQL，官方给出多种安装方式</strong></p><table><thead><tr><th><strong>安装方式</strong></th><th><strong>特点</strong></th></tr></thead><tbody><tr><td>rpm</td><td>安装简单，灵活性差，无法灵活选择版本、升级</td></tr><tr><td>rpm repository</td><td>安装包极小，版本安装简单灵活，升级方便，需要联网安装</td></tr><tr><td>通用二进制包</td><td>安装比较复杂，灵活性高，平台通用性好</td></tr><tr><td>源码包</td><td>安装最复杂，时间长，参数设置灵活，性能好</td></tr></tbody></table><ul><li>这里不能直接选择CentOS 7系统的版本，所以选择与之对应的Red Hat Enterprise Linux</li><li><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a> 直接点Download下载RPM Bundle全量包。包括了所有下面的组件。不需要一个一个下载了。</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566836657-d901c6d3-404d-4c6d-a8da-6e5e81dcbb83.png" alt="img"></p><p><strong>6. 下载的tar包，用压缩工具打开</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566854477-894796cd-b4e8-4032-a519-46c3b0d866be.png" alt="img"></p><p>解压后rpm安装包 （红框为抽取出来的安装包）</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566927228-be8c463d-1780-4c10-b421-8c892fc256b1.png" alt="img"></p><h2 id="2-2-CentOS7下检查MySQL依赖"><a href="#2-2-CentOS7下检查MySQL依赖" class="headerlink" title="2.2 CentOS7下检查MySQL依赖"></a>2.2 CentOS7下检查MySQL依赖</h2><p><strong>1. 检查&#x2F;tmp临时目录权限（必不可少）</strong></p><p>由于mysql安装过程中，会通过mysql用户在&#x2F;tmp目录下新建tmp_db文件，所以请给&#x2F;tmp较大的权限。执行 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 777 /tmp</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648566986447-4310291b-e5df-426f-b2ff-a67a335225a6.png" alt="img"></p><p><strong>2. 安装前，检查依赖</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep libaio</span><br></pre></td></tr></table></figure><ul><li>如果存在libaio包如下：</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567074697-f27d0847-e7fb-4768-852e-f4024d54f54d.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep net-tools</span><br></pre></td></tr></table></figure><ul><li>如果存在net-tools包如下：</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567142136-de48ee5e-db49-4a42-acb6-0f145ff100b0.png" alt="img"></p><ul><li>如果不存在需要到centos安装盘里进行rpm安装。安装linux如果带图形化界面，这些都是安装好的。</li></ul><h2 id="2-3-CentOS7下MySQL安装过程"><a href="#2-3-CentOS7下MySQL安装过程" class="headerlink" title="2.3 CentOS7下MySQL安装过程"></a>2.3 CentOS7下MySQL安装过程</h2><p><strong>1. 将安装程序拷贝到&#x2F;opt目录下</strong></p><p>拷贝如下5个包即可</p><p>在mysql的安装文件目录下执行：（必须按照顺序执行）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql-community-common-8.0.25-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-plugins-8.0.25-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-8.0.25-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-8.0.25-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-server-8.0.25-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li><p>注意: 如在检查工作时，没有检查mysql依赖环境在安装mysql-community-server会报错</p></li><li><p>rpm 是Redhat Package Manage缩写，通过RPM的管理，用户可以把源代码包装成以rpm为扩展名的文件形式，易于安装。</p></li><li><p>-i , –install 安装软件包</p></li><li><p>-v , –verbose 提供更多的详细信息输出</p></li><li><p>-h , –hash 软件包安装的时候列出哈希标记 (和 -v 一起使用效果更好)，展示进度条</p></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567293415-4a03d1a3-f30c-45b8-b312-b30ceb1ff046.png" alt="img"></p><p><strong>2. 安装过程截图</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567373832-0e084657-08cc-460e-9e30-ef8646c92d6a.png" alt="img"></p><p>安装过程中可能的报错信息：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567422547-324dd190-34a1-4de4-9bff-6099adbbdffe.png" alt="img"></p><p>解决办法：</p><p>一个命令：「 yum remove mysql-libs 」解决，清除之前安装过的依赖即可</p><h2 id="2-4-查看MySQL版本"><a href="#2-4-查看MySQL版本" class="headerlink" title="2.4. 查看MySQL版本"></a>2.4. 查看MySQL版本</h2><p>执行如下命令，如果成功表示安装mysql成功。类似java -version如果打出版本等信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql --version</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">mysqladmin --version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567543494-9a7c3359-6415-44a8-9b49-8235f47c912a.png" alt="img"></p><p>执行如下命令，查看是否安装成功。需要增加 -i 不用去区分大小写，否则搜索不到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep -i mysql</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567600672-c132d95a-a295-4ac8-83e8-8b8e40fee401.png" alt="img"></p><h2 id="2-5-服务的初始化"><a href="#2-5-服务的初始化" class="headerlink" title="2.5 服务的初始化"></a>2.5 服务的初始化</h2><p>为了保证数据库目录与文件的所有者为 mysql 登录用户，如果你是以 root 身份运行 mysql 服务，需要执行下面的命令初始化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --user=mysql</span><br></pre></td></tr></table></figure><p>说明： –initialize 选项默认以“安全”模式来初始化，则会为 root 用户生成一个密码并将该密码标记为过期，登录后你需要设置一个新的密码。生成的临时密码会往日志中记录一份。</p><p>查看密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567689135-00a6ac83-3ab0-41f6-aaf4-0e90b8074d36.png" alt="img"></p><h2 id="2-6-启动MySQL，查看状态"><a href="#2-6-启动MySQL，查看状态" class="headerlink" title="2.6 启动MySQL，查看状态"></a>2.6 启动MySQL，查看状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#加不加.service后缀都可以</span></span><br><span class="line">systemctl start mysqld.service       <span class="comment"># 启动</span></span><br><span class="line">systemctl stop mysqld.service<span class="comment"># 关闭</span></span><br><span class="line">systemctl restart mysqld.service<span class="comment"># 重启</span></span><br><span class="line">systemctl status mysqld.service<span class="comment"># 查看状态</span></span><br></pre></td></tr></table></figure><p>mysqld 这个可执行文件就代表着MySQL 服务器程序，运行这个可执行文件就可以直接启动一个</p><p>服务器进程。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567849883-88c91804-6a4e-4ff6-bd3c-e363de3d6043.png" alt="img"></p><p>查看进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -i mysql</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567891689-15b1be42-4561-45ed-b90c-be7778ca6c4a.png" alt="img"></p><h2 id="2-7-查看MySQL服务是否自启动"><a href="#2-7-查看MySQL服务是否自启动" class="headerlink" title="2.7 查看MySQL服务是否自启动"></a>2.7 查看MySQL服务是否自启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files|grep mysqld.service</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567960328-26d14ed0-424e-4f96-a4c4-da0b1f3fbe38.png" alt="img"></p><p>默认是enabled，表示自启动</p><ul><li>如不是enabled可以运行如下命令设置自启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysqld.service</span><br></pre></td></tr></table></figure><ul><li>如果希望不进行自启动，运行如下命令设置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> mysqld.service</span><br></pre></td></tr></table></figure><h1 id="3-MySQL登录"><a href="#3-MySQL登录" class="headerlink" title="3. MySQL登录"></a>3. MySQL登录</h1><h2 id="3-1-首次登录"><a href="#3-1-首次登录" class="headerlink" title="3.1 首次登录"></a>3.1 首次登录</h2><p>通过 mysql -hlocalhost -P3306 -uroot -p 进行登录，在Enter password：录入初始化密码</p><p>即生成的乱七八糟的密码</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648567689135-00a6ac83-3ab0-41f6-aaf4-0e90b8074d36.png" alt="img"></p><h2 id="3-2-修改密码"><a href="#3-2-修改密码" class="headerlink" title="3.2 修改密码"></a>3.2 修改密码</h2><ul><li>因为初始化密码默认是过期的，所以查看数据库会报错</li><li>修改密码：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;new_password&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="3-3-设置远程登录"><a href="#3-3-设置远程登录" class="headerlink" title="3.3 设置远程登录"></a>3.3 设置远程登录</h2><p><strong>1. 当前问题</strong></p><p>在用SQLyog或Navicat中配置远程连接Mysql数据库时遇到如下报错信息，这是由于Mysql配置了不支持远程连接引起的。</p><p><strong>2. 确认网络</strong></p><ol><li>在远程机器上使用ping ip地址保证网络畅通</li><li>在远程机器上使用telnet命令保证端口号开放访问</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet ip地址 端口号</span><br></pre></td></tr></table></figure><p><strong>3. 关闭防火墙或开放端口</strong></p><p><strong>方式一：关闭防火墙</strong></p><ul><li>CentOS6 ：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br></pre></td></tr></table></figure><ul><li>CentOS7：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld.service</span><br><span class="line">systemctl status firewalld.service</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"><span class="comment">#设置开机启用防火墙</span></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br><span class="line"><span class="comment">#设置开机禁用防火墙</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><p><strong>方式二：开放端口</strong></p><ul><li>查看开放的端口号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><ul><li>设置开放的端口号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=http --permanent</span><br><span class="line">firewall-cmd --add-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure><ul><li>重启防火墙</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>4. Linux下修改配置</strong></p><p>在Linux系统MySQL下测试：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line"><span class="keyword">select</span> Host,<span class="keyword">User</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648568574642-c05b9451-0f8c-44b3-899d-32195e62ddd6.png" alt="img"></p><p>可以看到root用户的当前主机配置信息为localhost。</p><p><strong>修改Host为通配符%</strong></p><p>Host列指定了允许用户登录所使用的IP，比如user&#x3D;root Host&#x3D;192.168.1.1。这里的意思就是说root用户只能通过192.168.1.1的客户端去访问。 user&#x3D;root Host&#x3D;localhost，表示只能通过本机客户端去访问。而%是个通配符，如果Host&#x3D;192.168.1.%，那么就表示只要是IP地址前缀为“192.168.1.”的客户端都可以连接。如果Host&#x3D;% ，表示所有IP都有连接权限。</p><p>注意：在生产环境下不能为了省事将host设置为%，这样做会存在安全问题，具体的设置可以根据生产环境的IP进行设置。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> host <span class="operator">=</span> <span class="string">&#x27;%&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><p>Host设置了“%”后便可以允许远程访问。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648568656270-2f55c96a-a6ee-433d-9057-f29ab76f6c2e.png" alt="img"></p><p>Host修改完成后记得执行flush privileges使配置立即生效：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>启动MySQL服务后，可以通过mysql命令来登录MySQL服务器，登录的完整命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql –h hostname|hostIP –P port –u username –p DatabaseName –e <span class="string">&quot;SQL语句&quot;</span></span><br></pre></td></tr></table></figure><p>下面详细介绍命令中的参数：</p><ul><li><p>-h参数后面接主机名或者主机IP，hostname为主机，hostIP为主机IP。</p></li><li><p>-P参数后面接MySQL服务的端口，通过该参数连接到指定的端口。MySQL服务的默认端口是3306，不使用该参数时自动连接到3306端口，port为连接的端口号。</p></li><li><p>-u参数后面接用户名，username为用户名。</p></li><li><p>-p参数会提示输入密码。</p></li><li><p>DatabaseName参数指明登录到哪一个数据库中。如果没有该参数，就会直接登录到MySQL数据库中，然后可以使用USE命令来选择数据库。</p></li><li><p>-e参数后面可以直接加SQL语句。登录MySQL服务器以后即可执行这个SQL语句，然后退出MySQL服务器。</p></li></ul><h1 id="4-MySQL8的主要目录结构"><a href="#4-MySQL8的主要目录结构" class="headerlink" title="4. MySQL8的主要目录结构"></a>4. MySQL8的主要目录结构</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name mysql</span><br></pre></td></tr></table></figure><p>安装好MySQL 8之后，输入上面命令查看如下的目录结构：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648621405888-c04bee78-83fd-4331-8acc-0dce46782a07.png" alt="img"></p><p><strong>MySQL数据库文件的存放路径：&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;datadir&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648621529056-97b65378-ba36-41d1-9491-83e60154f16e.png" alt="img"></p><p><strong>相关命令目录：&#x2F;usr&#x2F;bin（mysqladmin、mysqlbinlog、mysqldump等命令）和&#x2F;usr&#x2F;sbin。</strong></p><p><strong>配置文件目录：&#x2F;usr&#x2F;share&#x2F;mysql-8.0（命令及配置文件），&#x2F;etc&#x2F;mysql（如my.cnf）</strong></p><p>done.</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS_Java安装</title>
      <link href="/2022/01/01/CentOS-Java%E5%AE%89%E8%A3%85/"/>
      <url>/2022/01/01/CentOS-Java%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="1-卸载系统自带安装的java"><a href="#1-卸载系统自带安装的java" class="headerlink" title="1. 卸载系统自带安装的java"></a>1. 卸载系统自带安装的java</h1><p>查看安装的java</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648646334156-c9efae27-e3a1-40c1-9bd6-e1985109ff54.png" alt="img"></p><p>讲「java」开头的安装包卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y remove java-1.6.0-openjdk-devel-1.6.0.41-1.13.13.1.el7_3.x86_64</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h1 id="2-Java安装"><a href="#2-Java安装" class="headerlink" title="2. Java安装"></a>2. Java安装</h1><p>1、在 &#x2F;usr&#x2F;local&#x2F; 下创建java ⽂件夹并进⼊</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/</span><br><span class="line"><span class="built_in">mkdir</span> java</span><br><span class="line"><span class="built_in">cd</span> java</span><br></pre></td></tr></table></figure><p>2、将准备好的JDK 安装包解压到 &#x2F;usr&#x2F;local&#x2F;java 中即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u161-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648647376418-4531d55e-78c1-4ec9-b24a-e1d609c51b69.png" alt="img"></p><p>解压后出现该蓝色文件夹</p><h1 id="3-配置JDK环境变量"><a href="#3-配置JDK环境变量" class="headerlink" title="3. 配置JDK环境变量"></a>3. 配置JDK环境变量</h1><p>编辑&#x2F;etc&#x2F;profile ⽂件，在⽂件尾部加⼊如下JDK 环境配置即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>在配置文件结尾加入环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_161</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure><p>然后执⾏如下命令让环境变量⽣效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22980507/1648647838764-bf128bf8-39b1-427d-861e-d0123d6424f9.png" alt="img"></p><p>done.</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
